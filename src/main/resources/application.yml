spring:
  profiles:
    active: dev
  datasource:
    url: jdbc:mysql://localhost:3306/demo?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    initialSize: 1
    minIdle: 3
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,slf4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    #  Message sent to the switch confirmation mechanism,Whether to confirm the callback
    publisher-confirms: true
    publisher-returns: true
  servlet:
    multipart:
      max-request-size: 500MB
      max-file-size: 500MB
  jackson:
    default-property-inclusion: non_null
  application:
    name: demo
  mail:
    host: smtp.qq.com
    username: 578241608@qq.com
    password: hnmrdczsqkkmbdaj
    protocol: smtp
    properties.mail.smtp.auth: true
    properties.mail.smtp.port: 465
    properties.mail.smtp.starttls.enable: true
    properties.mail.smtp.starttls.required: true
    properties.mail.smtp.ssl.enable: true
    default-encoding: utf-8
    from: 578241608@qq.com
server:
  port: 8848
mybatis-plus:
  type-aliases-package: com.xz.demo.model.pojo
  mapper-locations: classpath*:mapper/**/*.xml
  global-config:
    # Database related configuration
    db-config:
      # Primary key type AUTO: "Database ID increment", INPUT: "User input ID", ID_WORKER: "Globally unique ID (number type unique ID)", UUID: "Globally unique ID UUID";
      id-type: input
      field-strategy: not_empty
      # hump _ underline transform
      column-underline: true
      # Databases capital -> model transform
      capital-mode: true
      # logic setting
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: mysql
    refresh: true
  configuration:
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
jwt:
  header: Authorization
  secret: demo
  expiration: 7200000
  tokenHead: "Bearer "
snowflake:
  #Between the same service can be the same when clustering , Different services must be different
  workerId: 1
  #Different data centers are different
  datacenterId: 1
